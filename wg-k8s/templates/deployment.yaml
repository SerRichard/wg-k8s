apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wg-k8s.fullname" . }}
  labels:
    {{- include "wg-k8s.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "wg-k8s.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "wg-k8s.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      hostNetwork: false
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "wg-k8s.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
              protocol: UDP
          command: ["/bin/sh", "-c"]
          args:
            - |
              #!/bin/sh
              export PRIVATE_KEY=$(cat /tmp/privatekey/privatekey)
              mkdir -p /config/wg_confs
              sed "s|\${PRIVATE_KEY}|${PRIVATE_KEY}|g" /tmp/wireguard/wg0.conf.template > /etc/wireguard/wg0.conf
              exec /init
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "UTC"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:          
            - name: config
              mountPath: /tmp/wireguard
            - name: privatekey
              mountPath: /tmp/privatekey
            - name: modules
              mountPath: /lib/modules
        {{- if .Values.gateway.create }}
        - name: gateway
          image: "{{ .Values.gateway.image.repository }}:{{ .Values.gateway.image.tag}}"
          imagePullPolicy: {{ .Values.gateway.image.pullPolicy }}
          ports:
            {{- range .Values.gateway.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .targetPort | default .port }}
              protocol: {{ .protocol | default "TCP" }}
            {{- end }}
        {{- end}}
      volumes:
        - name: config
          configMap:
            name: wireguard-config
        - name: privatekey
          secret: 
            secretName: wireguard-secret
        - name: modules
          hostPath:
            path: /lib/modules
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
