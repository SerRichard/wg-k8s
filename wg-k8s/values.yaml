# Default values for wg-k8s.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
image:
  repository: linuxserver/wireguard
  pullPolicy: IfNotPresent
  tag: 1.0.20250521

config:
  # The following values are available for defining an interface.
  interface:
    address: 10.3.0.1/24
    dns: 10.152.183.10
    listenport: 4500

  postUp: iptables -A FORWARD -i wg0 -j ACCEPT; iptables -A FORWARD -o wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE; iptables -S FORWARD
  postDown: iptables -D FORWARD -i wg0 -j ACCEPT; iptables -D FORWARD -o wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE; iptables -S FORWARD

  # The following values can be provided for peers. Endpoint is optional.
  peers: []
    # - publicKey: Rnkhgx1sSL2/mkjQ1e+fTKmSVNpQDqOKLdc0+fb+omc=
    #   endpoint: 191.171.117.174:4500
    #   allowedIPs: 10.1.0.0/16, 10.152.183.0/24, 10.3.0.0/24
    #   persistentKeepAlive: 25

gateway:
  create: true

  image:
    repository: vimagick/tinyproxy
    pullPolicy: IfNotPresent
    tag: latest

  service:
    type: ClusterIP

    ports: []

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: "wg-k8s"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext:
  privileged: false
  sysctls:
  - name: net.ipv4.ip_forward
    value: "1"
  capabilities:
    add:
      - NET_ADMIN
      - SYS_MODULE

service:
  type: ClusterIP
  clusterIP: ""
  port: 4500

resources: {}

livenessProbe:
  exec:
    command:
      - /bin/sh
      - -c
      - "ss -lnu | grep -q 4500"
  initialDelaySeconds: 5
  periodSeconds: 10
  failureThreshold: 3

readinessProbe:
  exec:
    command:
      - /bin/sh
      - -c
      - "ss -lnu | grep -q 4500"
  initialDelaySeconds: 5
  periodSeconds: 10
  failureThreshold: 3

# Additional volumes on the output Deployment definition.
volumes: []

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}
